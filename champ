#! /usr/bin/env python

## CARRERA CHAMPS
##
##   A script to start a race for LAPS laps on a Carrera Digital 132/124
##   slot car set.
##
##   You must supply the mac address of your Control Unit and the number
##   laps you want to race for (default=6)
##
##   Usage: ./champs CU_MAC_ADDRESS LAPS PLAYERS
##   Example: ./champs ab:12:cd:34:ef:45 10

import curses
import time

from optparse import OptionParser

from carreralib import ControlUnit

class Player:
    def __init__(self, name):
        self.name = name
        self.laps = 0

class Race:
    def __init__(self, cu, laps, players):
        self.laps = laps
        self.cu = ControlUnit(cu)
        self.players = list(map(lambda n: Player(n), players))

    def start(self, speed, brakes):
        for n in range(0, 2):
            self.cu.setbrake(n, brakes)
            self.cu.setspeed(n, speed)

        # Carrera CU ignores calls to start without minor delay.
        self.cu.start() # Initiate.
        time.sleep(2)
        self.cu.start() # Start.

    def run(self):
        pass

op = OptionParser()

op.add_option("-c", "--control-unit", action="store",
              type="string", dest="cu",
              help="The mac address of your Carrera control unit")
op.add_option("-l", "--laps", action="store",
              type="int", dest="laps",
              default=6, help="Number of laps to race for")
op.add_option("-b", "--brakes", action="store",
              type="int", default=8, dest="brakes",
              help="Automatic braking sensitivity (1..15)")
op.add_option("-s", "--speed", action="store",
              type="int", dest="speed", default=8,
              help="Top speed (1..15)")
op.add_option("-p", "--player", dest="players",
              type="string", action="append",
              help="The name of a player")

(options, args) = op.parse_args()

if not options.cu:
    op.error("Control Unit not supplied")

#stdscr = curses.initscr()
#curses.noecho()
#curses.cbreak()

race = Race(options.cu, options.laps, options.players or [])
race.start(options.speed, options.brakes)
race.run()

#curses.echo()
#curses.nocbreak()
#curses.endwin()

#cu.start()

# Start looping.
  # On Timer - add player and increment laps.
  # If player.laps >= laps, end.
